name: Package and Release

on:
  push:
    tags:
      - '**'
    branches:
      - alpha

env:
  CF_API_KEY: ${{ secrets.CF_API_KEY }}
  WOWI_API_TOKEN: ${{ secrets.WOWI_API_TOKEN }}
  WAGO_API_TOKEN: ${{ secrets.WAGO_API_TOKEN }}
  GITHUB_OAUTH: ${{ secrets.GITHUB_TOKEN }}

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Clone Project
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure Git user
        run: |
          git config --global user.name "donniedice"
          git config --global user.email "donniedice@protonmail.com"
          
      - name: Set Release Type
        id: set_release_type
        run: |
          if [[ "${{ github.ref }}" == refs/tags/* ]]; then
            TAG_NAME=${{ github.ref }}
            if [[ "$TAG_NAME" == *"beta"* ]]; then
              echo "release_type=beta" >> $GITHUB_OUTPUT
            elif [[ "$TAG_NAME" == *"alpha"* ]]; then
              echo "release_type=alpha" >> $GITHUB_OUTPUT
            else
              echo "release_type=release" >> $GITHUB_OUTPUT
            fi
          else
            echo "release_type=alpha" >> $GITHUB_OUTPUT
          fi

      - name: Extract Version from TOC
        id: extract_version
        run: |
          version=$(grep "^## Version:" Remove_Nameplate_Debuffs.toc | sed 's/## Version: //')
          echo "version=$version" >> $GITHUB_OUTPUT

      - name: Extract Changelog
        id: extract_changelog
        run: |
          VERSION="${{ steps.extract_version.outputs.version }}"
          if [ -f "docs/CHANGES.md" ]; then
            # Extract only the current version's changelog entries from CHANGES.md
            # This gets everything between the current version header and the next version header
            # The format is: ## vX.X.X - Title
            CHANGELOG_RAW=$(awk "/^## v${VERSION}/{flag=1; next} /^## v[0-9]/{flag=0} flag && /^-/" docs/CHANGES.md | head -20)
            
            # Format for Discord - keep the "- " prefix from CHANGES.md
            CHANGELOG=$(echo "$CHANGELOG_RAW" | sed ':a;N;$!ba;s/\n/\\n/g')
            
            if [ -z "$CHANGELOG_RAW" ]; then
              echo "changelog=No changes listed for version ${VERSION}" >> $GITHUB_OUTPUT
            else
              echo "changelog<<EOF" >> $GITHUB_OUTPUT
              echo "$CHANGELOG" >> $GITHUB_OUTPUT
              echo "EOF" >> $GITHUB_OUTPUT
            fi
          else
            echo "changelog=No changelog available" >> $GITHUB_OUTPUT
          fi

      - name: Package and Release
        uses: BigWigsMods/packager@master
        with:
          release-type: ${{ steps.set_release_type.outputs.release_type }}

      - name: Send Discord Notification
        if: success()
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        run: |
          if [ -z "$DISCORD_WEBHOOK" ]; then
            echo "Discord webhook not configured, skipping notification"
            exit 0
          fi
          
          # Determine release type emoji and color
          RELEASE_TYPE="${{ steps.set_release_type.outputs.release_type }}"
          if [ "$RELEASE_TYPE" = "alpha" ]; then
            EMOJI="üî¨"
            TYPE_TEXT="Alpha"
          elif [ "$RELEASE_TYPE" = "beta" ]; then
            EMOJI="üß™"
            TYPE_TEXT="Beta"
          else
            EMOJI="üõ°Ô∏è"
            TYPE_TEXT=""
          fi
          
          # Format the changelog for Discord
          CHANGELOG="${{ steps.extract_changelog.outputs.changelog }}"
          
          # Create RGX Mods standard Discord message
          response=$(curl -s -w "\n%{http_code}" -H "Content-Type: application/json" \
               -X POST \
               -d "{
                 \"content\": \"\",
                 \"username\": \"RND Update\",
                 \"avatar_url\": \"https://raw.githubusercontent.com/donniedice/Remove_Nameplate_Debuffs/main/images/rnd_logo.png\",
                 \"embeds\": [{
                   \"title\": \"$EMOJI RND | Remove Nameplate Debuffs - v${{ steps.extract_version.outputs.version }} $TYPE_TEXT\",
                   \"description\": \"**Clean up your nameplates!** - A new version of Remove Nameplate Debuffs has been released!\\n\\nüéØ **What's New:**\\n$CHANGELOG\\n\\n**Remove debuff icons from enemy nameplates for a cleaner UI experience!**\",
                   \"url\": \"https://github.com/donniedice/Remove_Nameplate_Debuffs/releases/tag/${{ github.ref_name }}\",
                   \"color\": 16744448,
                   \"thumbnail\": {
                     \"url\": \"https://raw.githubusercontent.com/donniedice/Remove_Nameplate_Debuffs/main/images/rnd_logo.png\"
                   },
                   \"fields\": [
                     {
                       \"name\": \"üì• Downloads\",
                       \"value\": \"[CurseForge](https://www.curseforge.com/wow/addons/remove-nameplate-debuffs)\\n[WoWInterface](https://www.wowinterface.com/downloads/info26320)\\n[Wago.io](https://addons.wago.io/addons/remove-nameplate-debuffs)\\n[GitHub](https://github.com/donniedice/Remove_Nameplate_Debuffs)\",
                       \"inline\": true
                     },
                     {
                       \"name\": \"üéÆ Compatibility\",
                       \"value\": \"‚úÖ The War Within\\n‚úÖ Classic Era\\n‚úÖ Cataclysm\\n‚úÖ MoP\",
                       \"inline\": true
                     },
                     {
                       \"name\": \"üí¨ Support\",
                       \"value\": \"[Join Discord](https://discord.gg/hK9N3esnce)\\n[Report Issues](https://github.com/donniedice/Remove_Nameplate_Debuffs/issues)\",
                       \"inline\": true
                     }
                   ],
                   \"footer\": {
                     \"text\": \"RGX Mods - RealmGX Community\",
                     \"icon_url\": \"https://raw.githubusercontent.com/donniedice/Remove_Nameplate_Debuffs/main/images/rnd_logo.png\"
                   },
                   \"timestamp\": \"$(date -u +%Y-%m-%dT%H:%M:%S.000Z)\"
                 }]
               }" \
               "$DISCORD_WEBHOOK")
          
          http_code=$(echo "$response" | tail -n1)
          if [ "$http_code" != "204" ]; then
            echo "Discord notification failed with HTTP code: $http_code"
            echo "Response: $(echo "$response" | head -n-1)"
            exit 1
          else
            echo "Discord notification sent successfully!"
          fi

      - name: Parse Changelog
        if: ${{ steps.set_release_type.outputs.release_type != 'alpha' }}
        run: |
          # Your existing changelog parsing logic